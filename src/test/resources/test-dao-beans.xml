<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<context:annotation-config />

	<bean id="historyDAO" class="com.cass.ihr.dao.HistoryDAO">
		<property name="keyspace" ref="keyspace" />
		<property name="objectMapper" ref="objectMapper" />
	</bean>

	<bean id="historyAstyanaDAO" class="com.cass.ihr.dao.HistoryAstyanaDAO">
		<property name="objectMapper" ref="objectMapper" />
		<property name="connectionPoolConfigurationImpl" ref="connectionPoolConfigurationImpl" />
	</bean>

	<!-- NETFLIX Cassandra Datasources -->
	<bean id="connectionPoolConfigurationImpl"
		class="com.netflix.astyanax.connectionpool.impl.ConnectionPoolConfigurationImpl">
		<constructor-arg value="myPool" />
		<property name="port" value="9171" />
		<property name="maxConnsPerHost" value="1" />
		<property name="seeds" value="127.0.0.1:9171" />
	</bean>

	<!-- Cassandra Datasources -->
	<bean id="cassandraHostConfigurator"
		class="me.prettyprint.cassandra.service.CassandraHostConfigurator">
		<property name="hosts" value="127.0.0.1:9171" />
		<property name="maxActive" value="15" />
		<property name="useSocketKeepalive" value="true" />
		<property name="maxWaitTimeWhenExhausted" value="5000" />
		<property name="cassandraThriftSocketTimeout" value="5000" />

		<property name="retryDownedHosts" value="true" />
		<property name="retryDownedHostsDelayInSeconds" value="30" />
		<property name="autoDiscoverHosts" value="false" />
		<property name="retryDownedHostsQueueSize" value="10" />

	</bean>
	<bean id="cassandraConsistencyLevelPolicy"
		class="me.prettyprint.cassandra.model.AllOneConsistencyLevelPolicy">
	</bean>

	<bean id="cluster" class="me.prettyprint.cassandra.service.ThriftCluster">
		<constructor-arg value="Test Cluster" />
		<constructor-arg ref="cassandraHostConfigurator" />
	</bean>

	<bean id="keyspace" class="me.prettyprint.hector.api.factory.HFactory"
		factory-method="createKeyspace">
		<constructor-arg value="IHR_local" />
		<constructor-arg ref="cluster" />
		<constructor-arg ref="cassandraConsistencyLevelPolicy" />
	</bean>

	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	<bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
		factory-bean="objectMapper" factory-method="getSerializationConfig" />

	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonSerializationConfig" />
		<property name="targetMethod" value="setSerializationInclusion" />
		<property name="arguments">
			<list>
				<value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_NULL</value> 
			</list>
		</property>
	</bean>

</beans>